[{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/go/basic/_index.bn/","summary":"","tags":null,"title":"Go বেসিক"},{"categories":null,"contents":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/go/basic/introduction/","summary":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","tags":null,"title":"Introduction"},{"categories":null,"contents":" Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.Println(\u0026#34;Value is\u0026#34;, b) func getPointer () (myPointer *int) { a := 234 return \u0026amp;a a := new(int) *a = 234 Pointers point to a memory location of a variable. Go is fully garbage-collected.\nType Conversion i := 2 f := float64(i) u := uint(i) Slice slice := []int{2, 3, 4} slice := []byte(\u0026#34;Hello\u0026#34;) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/go/basic/types/","summary":"Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.","tags":null,"title":"Basic Types"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/go/advanced/_index.bn/","summary":"","tags":null,"title":"অ্যাডভান্সড"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.Printf(\u0026#34;At position %d, the character %s is present\\n\u0026#34;, i, val) n := 0 x := 42 for n != x { n := guess() } ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/go/basic/flow-control/","summary":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.","tags":null,"title":"Flow Control"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/go/advanced/files/","summary":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","tags":null,"title":"File Manipulation"},{"categories":null,"contents":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/bash/basic/","summary":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","tags":null,"title":"Bash Variables"},{"categories":["Projets","Professionel"],"contents":"Blade Prince Academy ! Mon plus gros projet à ce jour ! C\u0026rsquo;est le premier jeu du studio Angel Corp, entreprise basé à Saint-Etienne j\u0026rsquo;ai rejoint en Septembre 2020. Le développement de Blade Prince Academy a duré 4 ans et a mobilisé une équipe d\u0026rsquo;une quarantaine de personne au plus fort du développement.\nBlade Prince Academy utilise un véritable système de combat en temps réel avec pause donnant ainsi un contrôle total sur les différents membres de l\u0026rsquo;escouade. Manipulez l’ordre et le timing de chaque attaque pour planifier et réaliser le combo parfait. Esquivez les attaques et sorts ennemis tout en gardant vos personnages au top de leur forme. Le jeu est inspiré de Pillar or Eternity dans sa bouble de gameplay principale. Vous gérez une équipe de 4 héros (parmis une douzaine jouable) et partez en mission dans une ville en proie aux guerres de gangs et de cultes. Les combats sont en temps réel mais vous pouvez mettre en pause a tout moment pour analyser la situation et planifier des combos. Chaque héro possède son style de combat et vous pouvez sélectionner 4 aptitudes parmis une dizaine pour chacun d\u0026rsquo;entre eux. La DA est très inspirée Anime japonais. Nous avons fais le choix de mélanger personnages en 3D et décors en 2D pour donner un look unique au jeu. Le HUB principal est améliorable afin de rendre le jeu plus facile en prenant le temps de gagner de l\u0026rsquo;experience et des ressources. En dehors des missions, vous devez gérer la fatigue des héros, leur équipement, organiser des fêtes étudiante\u0026hellip; Les boss sont un gros pic de difficulté et demande une parfaite maitrise de ses personnages. ","date":"March 7, 2024","hero":"/posts/blade-prince-academy/header.jpg","permalink":"http://localhost:1313/posts/blade-prince-academy/","summary":"\u003cp\u003eBlade Prince Academy ! Mon plus gros projet à ce jour ! C\u0026rsquo;est le premier jeu du studio Angel Corp, entreprise basé à Saint-Etienne j\u0026rsquo;ai rejoint en Septembre 2020. \u003c/br\u003e\nLe développement de Blade Prince Academy a duré 4 ans et a mobilisé une équipe d\u0026rsquo;une quarantaine de personne au plus fort du développement.\u003c/p\u003e","tags":["Unity","C#","Steam"],"title":"Blade Prince Academy"},{"categories":["Basic"],"contents":"Greeting! This is an introduction post. This post tests the followings:\nHero image is in the same directory as the post. This post should be at top of the sidebar. Post author should be the same as specified in author.yaml file. ","date":"June 8, 2020","hero":"/posts/introduction/hero.svg","permalink":"http://localhost:1313/posts/introduction/","summary":"Greeting! This is an introduction post. This post tests the followings:\nHero image is in the same directory as the post. This post should be at top of the sidebar. Post author should be the same as specified in author.yaml file. ","tags":["Basic","Multi-lingual"],"title":"Introduction"},{"categories":["Basic"],"contents":"Greeting! This is an introduction post. This post tests the followings:\nHero image is in the same directory as the post. This post should be at top of the sidebar. Post author should be the same as specified in author.yaml file. ","date":"June 8, 2020","hero":"/posts/zintroduction/hero.svg","permalink":"http://localhost:1313/posts/zintroduction/","summary":"Greeting! This is an introduction post. This post tests the followings:\nHero image is in the same directory as the post. This post should be at top of the sidebar. Post author should be the same as specified in author.yaml file. ","tags":["Basic","Multi-lingual"],"title":"Introduction"},{"categories":null,"contents":"This is a sample post intended to test the followings:\nA different post author. Table of contents. Markdown content rendering. Math rendering. Emoji rendering. Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Inline Markdown In Table italics bold strikethrough code Code Blocks Code block with backticks html\r\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nMath Rendering Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\nEmoji Rendering 🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"June 8, 2020","hero":"/posts/markdown-sample/hero.svg","permalink":"http://localhost:1313/posts/markdown-sample/","summary":"This is a sample post intended to test the followings:\nA different post author. Table of contents. Markdown content rendering. Math rendering. Emoji rendering. Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur?","tags":null,"title":"Markdown Samples"},{"categories":null,"contents":"This is a sample post intended to test the followings:\nA different post author. Table of contents. Markdown content rendering. Math rendering. Emoji rendering. Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Inline Markdown In Table italics bold strikethrough code Code Blocks Code block with backticks html\r\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nMath Rendering Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\nEmoji Rendering 🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"June 8, 2020","hero":"/posts/zanciens/markdown-sample/hero.svg","permalink":"http://localhost:1313/posts/zanciens/markdown-sample/","summary":"This is a sample post intended to test the followings:\nA different post author. Table of contents. Markdown content rendering. Math rendering. Emoji rendering. Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur?","tags":null,"title":"Markdown Samples"},{"categories":["Basic"],"contents":"This sample post tests the followings:\nCategory, sub-category nesting in the sidebar. Hero image and other images are in images folder inside this post directory. Different media rendering like image, tweet, YouTube video, Vimeo video etc. Image Sample Tweet Sample Owl bet you\u0026#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 YouTube Video Sample Vimeo Video Sample ","date":"June 8, 2020","hero":"/posts/category/sub-category/rich-content/images/forest.jpg","permalink":"http://localhost:1313/posts/category/sub-category/rich-content/","summary":"This sample post tests the followings:\nCategory, sub-category nesting in the sidebar. Hero image and other images are in images folder inside this post directory. Different media rendering like image, tweet, YouTube video, Vimeo video etc. Image Sample Tweet Sample Owl bet you\u0026#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 YouTube Video Sample Vimeo Video Sample ","tags":["Markdown","Content Organization","Multi-lingual"],"title":"Rich Content"},{"categories":["Basic"],"contents":"This sample post tests the followings:\nCategory, sub-category nesting in the sidebar. Hero image and other images are in images folder inside this post directory. Different media rendering like image, tweet, YouTube video, Vimeo video etc. Image Sample Tweet Sample Owl bet you\u0026#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 YouTube Video Sample Vimeo Video Sample ","date":"June 8, 2020","hero":"/posts/zanciens/category/sub-category/rich-content/images/forest.jpg","permalink":"http://localhost:1313/posts/zanciens/category/sub-category/rich-content/","summary":"This sample post tests the followings:\nCategory, sub-category nesting in the sidebar. Hero image and other images are in images folder inside this post directory. Different media rendering like image, tweet, YouTube video, Vimeo video etc. Image Sample Tweet Sample Owl bet you\u0026#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 YouTube Video Sample Vimeo Video Sample ","tags":["Markdown","Content Organization","Multi-lingual"],"title":"Rich Content"},{"categories":null,"contents":"This is a sample post intended to test the followings:\nDefault hero image. Different shortcodes. Alert The following alerts are available in this theme.\nThis is sample alert with type=\u0026quot;success\u0026quot;. This is sample alert with type=\u0026quot;danger\u0026quot;. This is sample alert with type=\u0026quot;warning\u0026quot;. This is sample alert with type=\u0026quot;info\u0026quot;. This is sample alert with type=\u0026quot;dark\u0026quot;. This is sample alert with type=\u0026quot;primary\u0026quot;. This is sample alert with type=\u0026quot;secondary\u0026quot;. Image A sample image without any attribute. A sample image with height and width attributes. A center aligned image with height and width attributes. A image with float attribute. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Praesent tellus risus, eleifend vel efficitur ac, venenatis sit amet sem. Ut ut egestas erat. Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Suspendisse nec ipsum eu erat finibus dictum. Morbi volutpat nulla purus, vel maximus ex molestie id. Nullam posuere est urna, at fringilla eros venenatis quis.\nFusce vulputate dolor augue, ut porta sapien fringilla nec. Vivamus commodo erat felis, a sodales lectus finibus nec. In a pulvinar orci. Maecenas suscipit eget lorem non pretium. Nulla aliquam a augue nec blandit. Curabitur ac urna iaculis, ornare ligula nec, placerat nulla. Maecenas aliquam nisi vitae tempus vulputate.\nSplit This theme support splitting the page into as many columns as you wish.\nTwo column split Left Column Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.\nRight Column Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.\nThree column split Left Column Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.\nMiddle Column Aenean dignissim dictum ex. Donec a nunc vel nibh placerat interdum.\nRight Column Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.\nVertical Space Give vertical space between two lines.\nThis is line one. This is line two. It should have 4rem vertical space with previous line.\nVideo Video by Rahul Sharma from Pexels.\nMermaid Here, are few example of mermaid shortcode.\nGraph:\ngraph LR;\rA[Hard edge] --\u003e|Link text| B(Round edge)\rB --\u003e C{Decision}\rC --\u003e|One| D[Result one]\rC --\u003e|Two| E[Result two]\rSequence Diagram:\nsequenceDiagram\rparticipant Alice\rparticipant Bob\rAlice-\u003e\u003eJohn: Hello John, how are you?\rloop Healthcheck\rJohn-\u003e\u003eJohn: Fight against hypochondria\rend\rNote right of John: Rational thoughts prevail!\rJohn--\u003e\u003eAlice: Great!\rJohn-\u003e\u003eBob: How about you?\rBob--\u003e\u003eJohn: Jolly good!\rGantt diagram:\ngantt\rdateFormat YYYY-MM-DD\rtitle Adding GANTT diagram to mermaid\rexcludes weekdays 2014-01-10\rsection A section\rCompleted task :done, des1, 2014-01-06,2014-01-08\rActive task :active, des2, 2014-01-09, 3d\rFuture task : des3, after des2, 5d\rFuture task2 : des4, after des3, 5d\rClass Diagram:\nclassDiagram\rClass01 \u003c|-- AveryLongClass : Cool\rClass03 *-- Class04\rClass05 o-- Class06\rClass07 .. Class08\rClass09 --\u003e C2 : Where am i?\rClass09 --* C3\rClass09 --|\u003e Class07\rClass07 : equals()\rClass07 : Object[] elementData\rClass01 : size()\rClass01 : int chimp\rClass01 : int gorilla\rClass08 \u003c--\u003e C2: Cool label\rGit Graph:\ngitGraph\rcommit id: \"ZERO\"\rbranch develop\rcommit id:\"A\"\rcheckout main\rcommit id:\"ONE\"\rcheckout develop\rcommit id:\"B\"\rcheckout main\rcommit id:\"TWO\"\rcherry-pick id:\"A\"\rcommit id:\"THREE\"\rcheckout develop\rcommit id:\"C\"\rER Diagram:\nerDiagram\rCUSTOMER ||--o{ ORDER : places\rORDER ||--|{ LINE-ITEM : contains\rCUSTOMER }|..|{ DELIVERY-ADDRESS : uses\rGist Embeded PDF Page: / Previous Next ","date":"June 8, 2020","hero":"/posts/shortcodes/boat.jpg","permalink":"http://localhost:1313/posts/shortcodes/","summary":"This is a sample post intended to test the followings:\nDefault hero image. Different shortcodes. Alert The following alerts are available in this theme.\nThis is sample alert with type=\u0026quot;success\u0026quot;. This is sample alert with type=\u0026quot;danger\u0026quot;. This is sample alert with type=\u0026quot;warning\u0026quot;. This is sample alert with type=\u0026quot;info\u0026quot;. This is sample alert with type=\u0026quot;dark\u0026quot;. This is sample alert with type=\u0026quot;primary\u0026quot;. This is sample alert with type=\u0026quot;secondary\u0026quot;. Image A sample image without any attribute.","tags":null,"title":"Shortcodes Samples"},{"categories":null,"contents":"This is a sample post intended to test the followings:\nDefault hero image. Different shortcodes. Alert The following alerts are available in this theme.\nThis is sample alert with type=\u0026quot;success\u0026quot;. This is sample alert with type=\u0026quot;danger\u0026quot;. This is sample alert with type=\u0026quot;warning\u0026quot;. This is sample alert with type=\u0026quot;info\u0026quot;. This is sample alert with type=\u0026quot;dark\u0026quot;. This is sample alert with type=\u0026quot;primary\u0026quot;. This is sample alert with type=\u0026quot;secondary\u0026quot;. Image A sample image without any attribute. A sample image with height and width attributes. A center aligned image with height and width attributes. A image with float attribute. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Praesent tellus risus, eleifend vel efficitur ac, venenatis sit amet sem. Ut ut egestas erat. Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Suspendisse nec ipsum eu erat finibus dictum. Morbi volutpat nulla purus, vel maximus ex molestie id. Nullam posuere est urna, at fringilla eros venenatis quis.\nFusce vulputate dolor augue, ut porta sapien fringilla nec. Vivamus commodo erat felis, a sodales lectus finibus nec. In a pulvinar orci. Maecenas suscipit eget lorem non pretium. Nulla aliquam a augue nec blandit. Curabitur ac urna iaculis, ornare ligula nec, placerat nulla. Maecenas aliquam nisi vitae tempus vulputate.\nSplit This theme support splitting the page into as many columns as you wish.\nTwo column split Left Column Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.\nRight Column Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.\nThree column split Left Column Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.\nMiddle Column Aenean dignissim dictum ex. Donec a nunc vel nibh placerat interdum.\nRight Column Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.\nVertical Space Give vertical space between two lines.\nThis is line one. This is line two. It should have 4rem vertical space with previous line.\nVideo Video by Rahul Sharma from Pexels.\nMermaid Here, are few example of mermaid shortcode.\nGraph:\ngraph LR;\rA[Hard edge] --\u003e|Link text| B(Round edge)\rB --\u003e C{Decision}\rC --\u003e|One| D[Result one]\rC --\u003e|Two| E[Result two]\rSequence Diagram:\nsequenceDiagram\rparticipant Alice\rparticipant Bob\rAlice-\u003e\u003eJohn: Hello John, how are you?\rloop Healthcheck\rJohn-\u003e\u003eJohn: Fight against hypochondria\rend\rNote right of John: Rational thoughts prevail!\rJohn--\u003e\u003eAlice: Great!\rJohn-\u003e\u003eBob: How about you?\rBob--\u003e\u003eJohn: Jolly good!\rGantt diagram:\ngantt\rdateFormat YYYY-MM-DD\rtitle Adding GANTT diagram to mermaid\rexcludes weekdays 2014-01-10\rsection A section\rCompleted task :done, des1, 2014-01-06,2014-01-08\rActive task :active, des2, 2014-01-09, 3d\rFuture task : des3, after des2, 5d\rFuture task2 : des4, after des3, 5d\rClass Diagram:\nclassDiagram\rClass01 \u003c|-- AveryLongClass : Cool\rClass03 *-- Class04\rClass05 o-- Class06\rClass07 .. Class08\rClass09 --\u003e C2 : Where am i?\rClass09 --* C3\rClass09 --|\u003e Class07\rClass07 : equals()\rClass07 : Object[] elementData\rClass01 : size()\rClass01 : int chimp\rClass01 : int gorilla\rClass08 \u003c--\u003e C2: Cool label\rGit Graph:\ngitGraph\rcommit id: \"ZERO\"\rbranch develop\rcommit id:\"A\"\rcheckout main\rcommit id:\"ONE\"\rcheckout develop\rcommit id:\"B\"\rcheckout main\rcommit id:\"TWO\"\rcherry-pick id:\"A\"\rcommit id:\"THREE\"\rcheckout develop\rcommit id:\"C\"\rER Diagram:\nerDiagram\rCUSTOMER ||--o{ ORDER : places\rORDER ||--|{ LINE-ITEM : contains\rCUSTOMER }|..|{ DELIVERY-ADDRESS : uses\rGist Embeded PDF Page: / Previous Next ","date":"June 8, 2020","hero":"/posts/zanciens/shortcodes/boat.jpg","permalink":"http://localhost:1313/posts/zanciens/shortcodes/","summary":"This is a sample post intended to test the followings:\nDefault hero image. Different shortcodes. Alert The following alerts are available in this theme.\nThis is sample alert with type=\u0026quot;success\u0026quot;. This is sample alert with type=\u0026quot;danger\u0026quot;. This is sample alert with type=\u0026quot;warning\u0026quot;. This is sample alert with type=\u0026quot;info\u0026quot;. This is sample alert with type=\u0026quot;dark\u0026quot;. This is sample alert with type=\u0026quot;primary\u0026quot;. This is sample alert with type=\u0026quot;secondary\u0026quot;. Image A sample image without any attribute.","tags":null,"title":"Shortcodes Samples"},{"categories":["Projets","Personnel"],"contents":"\rDragon Garden est un tamagotchi-like sur lequel j\u0026rsquo;ai travaillé durant le confinement afin de continuer à améliorer mes connaissances de Unity et de la programmation de jeux mobiles\nLe principe du jeu est comme les tamagotchi , il faut veiller au bien-être de son dragon en le nourrissant régulièrement, en jouant avec lui et en le faisant dormir. Si la moyenne de ses 3 besoins est trop basse , il va commencer a perdre de la vie. Le calcul des besoins de fait grâce à l\u0026rsquo;horloge du smartphone , ainsi lorsque le joueur relance l\u0026rsquo;application les barres ont diminués. Le joueur recoit des notifications si les besoins deviennent bas. Le dragon est entièrement animé et joue des animations aléatoirements ou selon ses besoins( baillement par exemple ) Le menu du bas contient l\u0026rsquo;inventaire, le magasin, les mini-jeux, la possibilité de \u0026ldquo;partager\u0026rdquo; son dragon en bluetooth et les paramètres. La génération du dragon est aléatoire , il sera différent pour chaque joueur. Ce projet est en suspens et loin d\u0026rsquo;être terminé , j\u0026rsquo;ajouterai du contenu sur cette page au fur et à mesure de ma progression.\n","date":"May 20, 2020","hero":"/posts/dragon-garden/DragonBackground.jpg","permalink":"http://localhost:1313/posts/dragon-garden/","summary":"\u003cstyle type='text/css'\u003e\r\n.customImg {width: 180px !important; heigth=180px !important}\r\n\u003c/style\u003e\r\n\u003cp\u003eDragon Garden est un tamagotchi-like sur lequel j\u0026rsquo;ai travaillé durant le confinement afin de continuer à améliorer mes connaissances de Unity et de la programmation de jeux mobiles\u003c/br\u003e\u003c/p\u003e","tags":["Unity","C#","Mobile"],"title":"Dragon Garden"},{"categories":["Projets","Personnel"],"contents":"\r4 Cards est l\u0026rsquo;adaptation d\u0026rsquo;un jeu de carte sur Android grâce à Unity. C\u0026rsquo;est un projet que je réalise seul pour apprendre comment concevoir des jeux prévus pour une interface mobile. C\u0026rsquo;est un jeu qui combine chance , mémoire et stratégie.\nLe but du jeu est d\u0026rsquo;avoir le score le plus faible possible pour remporter la manche. Chaque joueur possède 4 cartes faces cachées posées sur le terrain. Au début de la manche , ils en regardent 2 et doivent les mémoriser. Ensuite lors de son tour un joueur pioche une carte soit dans le deck soit dans la défausse. Il la regarde et peut soit la garder en l\u0026rsquo;échangeant contre l\u0026rsquo;une de ses cartes ou bien la jeter. Certaines cartes ont un pouvoir spécial lorsqu\u0026rsquo;elles sont défaussées, le Valet permet d\u0026rsquo;échanger 2 cartes entre les joueurs et la Reine permet de regarder une de ses propres cartes. Lorsqu\u0026rsquo;un joueur jette une carte , si les autres ont une carte de même valeur (ou du moins s\u0026rsquo;ils se souviennent en avoir une) ils peuvent la jeter sans devoir en prendre une autre a la place. S\u0026rsquo;ils se trompent ils piochent une carte et la garde en plus de celles qu\u0026rsquo;ils ont déjà. (Il peuvent donc avoir 5 ou 6 cartes sur le terrain ce qui rendra leur victoire difficile)\nLorsqu\u0026rsquo;un joueur pense avoir un score assez faible. Il choisit l\u0026rsquo;option \u0026ldquo;Fin de tour\u0026rdquo; les autres joueurs jouent encore une fois puis les scores sont calculés et le score le plus faible remporte la manche Le jeu est jouable contre l\u0026rsquo;IA qui possède plusieurs niveaux de difficultés ou contre d\u0026rsquo;autres joueurs en ligne. Le multijoueur est implémenté grâce à Photon Unity en utilisant des RPC. Le bouton \u0026ldquo;Play!\u0026rdquo; lance le matchmaking et connecte le joueur avec tout autre joueur en recherche de partie , ils se transmettent leur pseudo et la partie peut commencer. En bonus, j\u0026rsquo;ai ajouté un menu qui permet de changer l\u0026rsquo;apparence des cartes, on débloque de apparences en gagnant des parties contre l\u0026rsquo;IA ou d\u0026rsquo;autres joueurs.\n","date":"April 16, 2020","hero":"/posts/4cards/4CardsBackground.jpg","permalink":"http://localhost:1313/posts/4cards/","summary":"\u003cstyle type='text/css'\u003e\r\n.customImg {width: 180px !important; heigth=180px !important}\r\n\u003c/style\u003e\r\n\u003cp\u003e4 Cards est l\u0026rsquo;adaptation d\u0026rsquo;un jeu de carte sur Android grâce à Unity.\u003c/br\u003e\nC\u0026rsquo;est un projet que je réalise seul pour apprendre comment concevoir des jeux prévus pour une interface mobile.\u003c/br\u003e\nC\u0026rsquo;est un jeu qui combine chance , mémoire et stratégie.\u003c/p\u003e","tags":["Unity","C#","Mobile"],"title":"4 Cards"},{"categories":["Projets","UQAC"],"contents":"Depths\u0026rsquo; Adventures est un Tactical RPG - Rogue Like créé sous Unity par 6 étudiants pendant 4 mois.\nLe jeu est téléchargeable ici !\nPour le cours de Laboratoire de Jeux Vidéo à l\u0026rsquo;UQAC , nous avons dû réaliser un jeu sous Unity en un trimestre. Notre équipe a choisi de créer un Tactical RPG - Rogue Like dans un univers Fantasy J\u0026rsquo;ai été en charge des fonctionnalités de combats , de la création des sorts et de divers éléments graphiques. Nous avons obtenu la note de 4.0 sur 4,33.\nL\u0026rsquo;écran d\u0026rsquo;accueil dans une ambiance taverne permet de choisir les aventuriers qui vont parcourir le donjon ainsi que des \u0026ldquo;tokens\u0026rdquo;, des bonus à assigner à chaque personnage pour leur apporter des bonus / malus. Les tokens se débloquent en finissant un étage du donjon. Ils ont plusieurs niveaux de raretés et apportent divers bonus ou malus. Par exemple le token \u0026ldquo;Oak Rune\u0026rdquo; apporter +2 Points de vies mais -1 en Magie. Vient ensuite le choix des aventuriers , une équipe est composée de maximum 4 personnages mais le joueur peut choisir de prendre une équipe plus réduite pour un plus grand challenge. Le Guerrier est fort en attaque physique et en contrôle des monstres , mais n\u0026rsquo;attaque pas à distance. Le Mage a des sorts très puissants mais est très fragile. Le Ranger est rapide et peut ralentir les ennemis , mais il est faible au contact. Ce jeu est un rogue-like car les niveaux du donjon sont générés aléatoirement, les salles et les ennemis seront différents d\u0026rsquo;une partie à l\u0026rsquo;autre. On dirige l\u0026rsquo;équipe d\u0026rsquo;aventuriers en cliquant sur leur destination. Les points jaunes permettent de passer d\u0026rsquo;une salle à une autre. A chaque entrée dans une nouvelle salle , un combat se déclenche Dans l\u0026rsquo;inventaire, on peut voir les caractéristiques des aventuriers et leur assigner des tokens. Lorsque les aventuriers gagnent des combats, ils gagnent de l\u0026rsquo;expérience et peuvent gagner un niveau. Cela améliore leurs caractéristiques et ils gagnent un point de compétence à dépenser dans l\u0026rsquo;arbre des sorts. Les combats se font au tour par tour. Chaque personnage / monstre possède un nombre fixe de points de déplacement et de points d\u0026rsquo;actions à dépenser en un tour. Les aventuriers disposent de sorts offensifs (au corps à corps ou à distance) ainsi que des sorts de \u0026ldquo;buff\u0026rdquo; pour aider les alliés. Les aventuriers de haut niveaux disposent de sorts très puissants mais coûteux pouvant retourner le cours d\u0026rsquo;une bataille. ","date":"January 10, 2020","hero":"/posts/depth-adventures/Combat.png","permalink":"http://localhost:1313/posts/depth-adventures/","summary":"\u003cp\u003eDepths\u0026rsquo; Adventures est un Tactical RPG - Rogue Like créé sous Unity par 6 étudiants pendant 4 mois.\u003c/p\u003e","tags":["Unity","C#"],"title":"Depths' Adventures"},{"categories":["Projets","UQAC"],"contents":"Escape Unreal est un jeu de plateforme et escape game réalisé sur Unreal Engine par 3 étudiants en 2 mois.\nDurant le cours de Programmation de Jeu en Réseau , nous avons développé un mini jeu de plateforme \u0026amp; coopération sur Unreal Engine. Nous avons utilisé à la fois des scripts en C++ et des Blueprints.\nNous avons utilisé le personnage standard d\u0026rsquo;Unreal prêt à l\u0026rsquo;emploi car le but était d\u0026rsquo;apprendre à gérer le multijoueur , en particulier la réplication et les Remote Procedure Calls, ainsi que les bonnes pratiques C++.\nLes textures viennent de Quixel Megascan , qui fournit gratuitement aux utilisateurs d\u0026rsquo;Unreal Engine des textures photoréalistes jusqu\u0026rsquo;à 8K de résolution. Dans le niveau 1 , les joueurs doivent se placer sur des plaques de pressions qui font bouger les plateformes de l\u0026rsquo;autre joueur et ainsi de suite. Le niveau 2 ressemble à une Escape Room , les joueurs doivent trouver la bonne combinaison de levier pour sortir du hangar. Des plaques de pressions font tourner des panneaux qui révèlent le code et les joueurs doivent trouver les leviers correspondants et les activer. ","date":"January 8, 2020","hero":"/posts/escape-unreal/Level2.png","permalink":"http://localhost:1313/posts/escape-unreal/","summary":"\u003cp\u003eEscape Unreal est un jeu de plateforme et escape game réalisé sur Unreal Engine par 3 étudiants en 2 mois.\u003c/p\u003e","tags":["Unreal Engine","C++"],"title":"Escape Unreal"},{"categories":["Projets","UQAC"],"contents":"Station Defenders est un jeu de type Twin-Stick shooter - Tower Defense créé sous Unity par 3 étudiants pendant 4 mois.\nLe jeu est téléchargeable ici !\nPour le cours de Conception \u0026amp; Développement de Jeu, nous avons dû réaliser un jeu sous Unity en un trimestre. Notre équipe a choisi de créer un Twin-Stick shooter - Tower Defense dans un univers Sci-Fi J\u0026rsquo;ai été le chef de projet et j\u0026rsquo;ai réalisé le coeur du gameplay et les fonctionnalités principales. (Les 2 autres étudiants n\u0026rsquo;avaient jamais développé de jeu )\nLien Youtube du trailer : (cliquez sur l\u0026rsquo;image) L\u0026rsquo;écran d\u0026rsquo;accueil dans une ambiance Futuriste permet de commencer à jouer ou bien d\u0026rsquo;apprendre les contrôles et les règles du jeu. Chaque joueur clique sur le bouton A de sa manette ou sur la touche Entrée du clavier pour rejoindre la partie. Le but du jeu est de protéger le coeur de la station d\u0026rsquo;extraterrestres qui essayent de le détruire. Les joueurs peuvent se déplacer avec le stick gauche de la manette et tourner leur personnage avec le stick droit. Ils peuvent tirer des lasers, lancer des grenades , afficher une minimap et soigner les alliés à terre. Les aliens arrivent par vagues et la partie se termine si le coeur est détruit ou si toutes les vagues sont éliminées. Divers évènements viennent pimenter la partie : Des chutes de météorites , des coupures de courant et des incendies. Le score est aussi important car c\u0026rsquo;est un jeu d\u0026rsquo;équipe mais il y a aussi de la compétition car les joueurs cherchent à avoir le meilleur score de la partie. ","date":"January 7, 2020","hero":"/posts/station-defenders/Light.png","permalink":"http://localhost:1313/posts/station-defenders/","summary":"\u003cp\u003eStation Defenders est un jeu de type Twin-Stick shooter - Tower Defense créé sous Unity par 3 étudiants pendant 4 mois.\u003c/p\u003e","tags":["Unity","C#","Split-Screen"],"title":"Station Defenders"},{"categories":["Projets","UQAC"],"contents":"VR Home est logiciel fait grâce à Unity et Steam VR qui permet de tester des agencements de meubles en Réalité Virtuelle. Ce projet a été réalisé par une équipe de 3 étudiants pour le cours d\u0026rsquo;Interaction 3D et réalité virtuelle.\nPour ce cours, nous devions créer un \u0026ldquo;serious game\u0026rdquo; en réalité virtuelle avec Oculus ou HTC Vive en 2 mois . Notre équipe a choisi de réaliser un logiciel de design d\u0026rsquo;intérieur. Nous avons obtenu la note de 18 sur 20. L\u0026rsquo;utilisateur se déplace en se téléportant grâce au système de téléportation de SteamVR, il peut se déplacer librement dans les différentes pièces des maisons et tourne sur lui même pour changer l\u0026rsquo;orientation du personnage. En appuyant sur le bouton A (sur la main droite) ou le bouton X (sur la main gauche) l\u0026rsquo;interface s\u0026rsquo;ouvre et suit les mouvements de la tête de l\u0026rsquo;utilisateur. En pointant son index sur l\u0026rsquo;interface, l\u0026rsquo;utilisateur fait apparaitre une ligne de sélection qui lui permet de cliquer sur les différents boutons en utilisant les triggers des contrôleurs. Grâce à cette interface , l\u0026rsquo;utilisateur peut faire apparaitre des meubles sur les scènes et les placer où il le désire. Il peut changer l\u0026rsquo;agencement de la maison et le nombre de pièces dans l\u0026rsquo;onglet \u0026ldquo;Blueprints\u0026rdquo;. Grâce aux boutons \u0026ldquo;Save\u0026rdquo; et \u0026ldquo;Load\u0026rdquo;, la disposition des meubles est sauvegardée et peut être chargée pour continuer plus tard. Les touches \u0026ldquo;Grab\u0026rdquo; des contrôleurs Oculus permettent d\u0026rsquo;attraper un objet pointé par le joueur, il peut ainsi le déplacer en bougeant ses mains et utiliser les sticks pour faire tourner le meuble selon les 3 axes de rotation, un cercle blanc apparait pour indiquer quel est l\u0026rsquo;axe de rotation actuel ","date":"April 29, 2019","hero":"/posts/vr-home/Rotation-Meuble.png","permalink":"http://localhost:1313/posts/vr-home/","summary":"\u003cp\u003eVR Home est logiciel fait grâce à Unity et Steam VR qui permet de tester des agencements de meubles en Réalité Virtuelle.\nCe projet a été réalisé par une équipe de 3 étudiants pour le cours d\u0026rsquo;Interaction 3D et réalité virtuelle.\u003c/p\u003e","tags":["Unity","C#","VR"],"title":"VR Home"},{"categories":null,"contents":"Go Notes ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/go/_index.bn/","summary":"Go Notes ","tags":null,"title":"Go এর নোট সমূহ"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/posts/category/sub-category/_index.bn/","summary":"","tags":null,"title":"Sub-Category"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/posts/category/_index.bn/","summary":"","tags":null,"title":"Top Category Sample"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/_index.bn/","summary":"","tags":null,"title":"নোট সমূহ"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/posts/_index.bn/","summary":"","tags":null,"title":"পোস্ট সমূহ"},{"categories":null,"contents":"Bash Notes ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/bash/_index.bn/","summary":"Bash Notes ","tags":null,"title":"ব্যাশের নোট সমূহ"}]