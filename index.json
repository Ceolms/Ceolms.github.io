[{"categories":["Projets","Professionel"],"contents":"Blade Prince Academy ! Mon plus gros projet à ce jour ! C\u0026rsquo;est le premier jeu du studio Angel Corp, entreprise basée à Saint-Etienne que j\u0026rsquo;ai rejoint en Septembre 2020. Le développement de Blade Prince Academy a duré 4 ans et a mobilisé une équipe d\u0026rsquo;une quarantaine de personne au plus fort du développement.\nBlade Prince Academy utilise un véritable système de combat en temps réel avec pause donnant ainsi un contrôle total sur les différents membres de l\u0026rsquo;escouade. Manipulez l’ordre et le timing de chaque attaque pour planifier et réaliser le combo parfait. Esquivez les attaques et sorts ennemis tout en gardant vos personnages au top de leur forme. Le jeu est inspiré de Pillar or Eternity dans sa boucle de gameplay principale. Vous gérez une équipe de 4 héros (parmi une douzaine jouable) et partez en mission dans une ville en proie aux guerres de gangs et de cultes. Les combats sont en temps réel mais vous pouvez mettre en pause a tout moment pour analyser la situation et planifier des combos. Chaque héros possède son style de combat et vous pouvez sélectionner 4 aptitudes parmi une dizaine pour chacun d\u0026rsquo;entre eux. La DA est très inspirée Anime japonais. Nous avons fais le choix de mélanger personnages en 3D et décors en 2D pour donner un look unique au jeu. Le HUB principal est améliorable afin de rendre le jeu plus facile en prenant le temps de gagner de l\u0026rsquo;experience et des ressources. En dehors des missions, vous devez gérer la fatigue des héros, leur équipement, organiser des fêtes étudiantes\u0026hellip; Les boss sont un gros pic de difficulté et demande une parfaite maitrise de ses personnages. ","date":"March 7, 2024","hero":"/posts/blade-prince-academy/header.jpg","permalink":"https://hugo-toha.github.io/posts/blade-prince-academy/","summary":"\u003cp\u003eBlade Prince Academy ! Mon plus gros projet à ce jour ! C\u0026rsquo;est le premier jeu du studio Angel Corp, entreprise basée à Saint-Etienne que j\u0026rsquo;ai rejoint en Septembre 2020. \u003c/br\u003e\nLe développement de Blade Prince Academy a duré 4 ans et a mobilisé une équipe d\u0026rsquo;une quarantaine de personne au plus fort du développement.\u003c/p\u003e","tags":["Unity","C#","Steam"],"title":"Blade Prince Academy"},{"categories":["Projets","Freelance"],"contents":"Clash de Haches est un centre de Lancer de Haches situé à Andrézieux près de Saint-Etienne. J\u0026rsquo;ai développé pour eux un logiciel sur tablette reliée a un projecteur qui projette des mini-jeux sur cible en bois.\nPour rendre le lancer de hache plus fun, les fondateurs de Clash de Haches m\u0026rsquo;ont contacté afin que je leur développe une série de mini-jeux.\n","date":"November 30, 2023","hero":"/posts/clash-de-haches/logoClash.png","permalink":"https://hugo-toha.github.io/posts/clash-de-haches/","summary":"\u003cp\u003eClash de Haches est un centre de Lancer de Haches situé à Andrézieux près de Saint-Etienne.\u003c/br\u003e\nJ\u0026rsquo;ai développé pour eux un logiciel sur tablette reliée a un projecteur qui projette des mini-jeux sur cible en bois.\u003c/p\u003e","tags":["Unity","C#","Projecteur"],"title":"Clash de Haches"},{"categories":["Projets","Professionel"],"contents":"Boat Driver est une application qui permet de simuler un océan et de déplacer des maquettes motorisées sur un écran géant.\n","date":"July 4, 2023","hero":"/posts/boat-driver/VoileSolo.png","permalink":"https://hugo-toha.github.io/posts/boat-driver/","summary":"\u003cp\u003eBoat Driver est une application qui permet de simuler un océan et de déplacer des maquettes motorisées sur un écran géant.\u003c/p\u003e","tags":["Unity","C#","Steam"],"title":"Boat Driver"},{"categories":["Projets","Personnel"],"contents":"\rDragon Garden est un tamagotchi-like sur lequel j\u0026rsquo;ai travaillé durant le confinement afin de continuer à améliorer mes connaissances de Unity et de la programmation de jeux mobiles\nLe principe du jeu est comme les tamagotchi , il faut veiller au bien-être de son dragon en le nourrissant régulièrement, en jouant avec lui et en le faisant dormir. Si la moyenne de ses 3 besoins est trop basse , il va commencer a perdre de la vie. Le calcul des besoins de fait grâce à l\u0026rsquo;horloge du smartphone , ainsi lorsque le joueur relance l\u0026rsquo;application les barres ont diminués. Le joueur recoit des notifications si les besoins deviennent bas. Le dragon est entièrement animé et joue des animations aléatoirements ou selon ses besoins( baillement par exemple ) Le menu du bas contient l\u0026rsquo;inventaire, le magasin, les mini-jeux, la possibilité de \u0026ldquo;partager\u0026rdquo; son dragon en bluetooth et les paramètres. La génération du dragon est aléatoire , il sera différent pour chaque joueur. Ce projet est en suspens et loin d\u0026rsquo;être terminé , j\u0026rsquo;ajouterai du contenu sur cette page au fur et à mesure de ma progression.\n","date":"May 20, 2020","hero":"/posts/dragon-garden/DragonBackground.jpg","permalink":"https://hugo-toha.github.io/posts/dragon-garden/","summary":"\u003cstyle type='text/css'\u003e\r\n.customImg {width: 180px !important; heigth=180px !important}\r\n\u003c/style\u003e\r\n\u003cp\u003eDragon Garden est un tamagotchi-like sur lequel j\u0026rsquo;ai travaillé durant le confinement afin de continuer à améliorer mes connaissances de Unity et de la programmation de jeux mobiles\u003c/br\u003e\u003c/p\u003e","tags":["Unity","C#","Mobile"],"title":"Dragon Garden"},{"categories":["Projets","Personnel"],"contents":"\r4 Cards est l\u0026rsquo;adaptation d\u0026rsquo;un jeu de carte sur Android grâce à Unity. C\u0026rsquo;est un projet que je réalise seul pour apprendre comment concevoir des jeux prévus pour une interface mobile. C\u0026rsquo;est un jeu qui combine chance , mémoire et stratégie.\nLe but du jeu est d\u0026rsquo;avoir le score le plus faible possible pour remporter la manche. Chaque joueur possède 4 cartes faces cachées posées sur le terrain. Au début de la manche , ils en regardent 2 et doivent les mémoriser. Ensuite lors de son tour un joueur pioche une carte soit dans le deck soit dans la défausse. Il la regarde et peut soit la garder en l\u0026rsquo;échangeant contre l\u0026rsquo;une de ses cartes ou bien la jeter. Certaines cartes ont un pouvoir spécial lorsqu\u0026rsquo;elles sont défaussées, le Valet permet d\u0026rsquo;échanger 2 cartes entre les joueurs et la Reine permet de regarder une de ses propres cartes. Lorsqu\u0026rsquo;un joueur jette une carte , si les autres ont une carte de même valeur (ou du moins s\u0026rsquo;ils se souviennent en avoir une) ils peuvent la jeter sans devoir en prendre une autre a la place. S\u0026rsquo;ils se trompent ils piochent une carte et la garde en plus de celles qu\u0026rsquo;ils ont déjà. (Il peuvent donc avoir 5 ou 6 cartes sur le terrain ce qui rendra leur victoire difficile)\nLorsqu\u0026rsquo;un joueur pense avoir un score assez faible. Il choisit l\u0026rsquo;option \u0026ldquo;Fin de tour\u0026rdquo; les autres joueurs jouent encore une fois puis les scores sont calculés et le score le plus faible remporte la manche Le jeu est jouable contre l\u0026rsquo;IA qui possède plusieurs niveaux de difficultés ou contre d\u0026rsquo;autres joueurs en ligne. Le multijoueur est implémenté grâce à Photon Unity en utilisant des RPC. Le bouton \u0026ldquo;Play!\u0026rdquo; lance le matchmaking et connecte le joueur avec tout autre joueur en recherche de partie , ils se transmettent leur pseudo et la partie peut commencer. En bonus, j\u0026rsquo;ai ajouté un menu qui permet de changer l\u0026rsquo;apparence des cartes, on débloque de apparences en gagnant des parties contre l\u0026rsquo;IA ou d\u0026rsquo;autres joueurs.\n","date":"April 16, 2020","hero":"/posts/4cards/4CardsBackground.jpg","permalink":"https://hugo-toha.github.io/posts/4cards/","summary":"\u003cstyle type='text/css'\u003e\r\n.customImg {width: 180px !important; heigth=180px !important}\r\n\u003c/style\u003e\r\n\u003cp\u003e4 Cards est l\u0026rsquo;adaptation d\u0026rsquo;un jeu de carte sur Android grâce à Unity.\u003c/br\u003e\nC\u0026rsquo;est un projet que je réalise seul pour apprendre comment concevoir des jeux prévus pour une interface mobile.\u003c/br\u003e\nC\u0026rsquo;est un jeu qui combine chance , mémoire et stratégie.\u003c/p\u003e","tags":["Unity","C#","Mobile"],"title":"4 Cards"},{"categories":["Projets","UQAC"],"contents":"Depths\u0026rsquo; Adventures est un Tactical RPG - Rogue Like créé sous Unity par 6 étudiants pendant 4 mois.\nLe jeu est téléchargeable ici !\nPour le cours de Laboratoire de Jeux Vidéo à l\u0026rsquo;UQAC , nous avons dû réaliser un jeu sous Unity en un trimestre. Notre équipe a choisi de créer un Tactical RPG - Rogue Like dans un univers Fantasy J\u0026rsquo;ai été en charge des fonctionnalités de combats , de la création des sorts et de divers éléments graphiques. Nous avons obtenu la note de 4.0 sur 4,33.\nL\u0026rsquo;écran d\u0026rsquo;accueil dans une ambiance taverne permet de choisir les aventuriers qui vont parcourir le donjon ainsi que des \u0026ldquo;tokens\u0026rdquo;, des bonus à assigner à chaque personnage pour leur apporter des bonus / malus. Les tokens se débloquent en finissant un étage du donjon. Ils ont plusieurs niveaux de raretés et apportent divers bonus ou malus. Par exemple le token \u0026ldquo;Oak Rune\u0026rdquo; apporter +2 Points de vies mais -1 en Magie. Vient ensuite le choix des aventuriers , une équipe est composée de maximum 4 personnages mais le joueur peut choisir de prendre une équipe plus réduite pour un plus grand challenge. Le Guerrier est fort en attaque physique et en contrôle des monstres , mais n\u0026rsquo;attaque pas à distance. Le Mage a des sorts très puissants mais est très fragile. Le Ranger est rapide et peut ralentir les ennemis , mais il est faible au contact. Ce jeu est un rogue-like car les niveaux du donjon sont générés aléatoirement, les salles et les ennemis seront différents d\u0026rsquo;une partie à l\u0026rsquo;autre. On dirige l\u0026rsquo;équipe d\u0026rsquo;aventuriers en cliquant sur leur destination. Les points jaunes permettent de passer d\u0026rsquo;une salle à une autre. A chaque entrée dans une nouvelle salle , un combat se déclenche Dans l\u0026rsquo;inventaire, on peut voir les caractéristiques des aventuriers et leur assigner des tokens. Lorsque les aventuriers gagnent des combats, ils gagnent de l\u0026rsquo;expérience et peuvent gagner un niveau. Cela améliore leurs caractéristiques et ils gagnent un point de compétence à dépenser dans l\u0026rsquo;arbre des sorts. Les combats se font au tour par tour. Chaque personnage / monstre possède un nombre fixe de points de déplacement et de points d\u0026rsquo;actions à dépenser en un tour. Les aventuriers disposent de sorts offensifs (au corps à corps ou à distance) ainsi que des sorts de \u0026ldquo;buff\u0026rdquo; pour aider les alliés. Les aventuriers de haut niveaux disposent de sorts très puissants mais coûteux pouvant retourner le cours d\u0026rsquo;une bataille. ","date":"January 10, 2020","hero":"/posts/depth-adventures/Combat.png","permalink":"https://hugo-toha.github.io/posts/depth-adventures/","summary":"\u003cp\u003eDepths\u0026rsquo; Adventures est un Tactical RPG - Rogue Like créé sous Unity par 6 étudiants pendant 4 mois.\u003c/p\u003e","tags":["Unity","C#"],"title":"Depths' Adventures"},{"categories":["Projets","UQAC"],"contents":"Escape Unreal est un jeu de plateforme et escape game réalisé sur Unreal Engine par 3 étudiants en 2 mois.\nDurant le cours de Programmation de Jeu en Réseau , nous avons développé un mini jeu de plateforme \u0026amp; coopération sur Unreal Engine. Nous avons utilisé à la fois des scripts en C++ et des Blueprints.\nNous avons utilisé le personnage standard d\u0026rsquo;Unreal prêt à l\u0026rsquo;emploi car le but était d\u0026rsquo;apprendre à gérer le multijoueur , en particulier la réplication et les Remote Procedure Calls, ainsi que les bonnes pratiques C++.\nLes textures viennent de Quixel Megascan , qui fournit gratuitement aux utilisateurs d\u0026rsquo;Unreal Engine des textures photoréalistes jusqu\u0026rsquo;à 8K de résolution. Dans le niveau 1 , les joueurs doivent se placer sur des plaques de pressions qui font bouger les plateformes de l\u0026rsquo;autre joueur et ainsi de suite. Le niveau 2 ressemble à une Escape Room , les joueurs doivent trouver la bonne combinaison de levier pour sortir du hangar. Des plaques de pressions font tourner des panneaux qui révèlent le code et les joueurs doivent trouver les leviers correspondants et les activer. ","date":"January 8, 2020","hero":"/posts/escape-unreal/Level2.png","permalink":"https://hugo-toha.github.io/posts/escape-unreal/","summary":"\u003cp\u003eEscape Unreal est un jeu de plateforme et escape game réalisé sur Unreal Engine par 3 étudiants en 2 mois.\u003c/p\u003e","tags":["Unreal Engine","C++"],"title":"Escape Unreal"},{"categories":["Projets","UQAC"],"contents":"Station Defenders est un jeu de type Twin-Stick shooter - Tower Defense créé sous Unity par 3 étudiants pendant 4 mois.\nLe jeu est téléchargeable ici !\nPour le cours de Conception \u0026amp; Développement de Jeu, nous avons dû réaliser un jeu sous Unity en un trimestre. Notre équipe a choisi de créer un Twin-Stick shooter - Tower Defense dans un univers Sci-Fi J\u0026rsquo;ai été le chef de projet et j\u0026rsquo;ai réalisé le coeur du gameplay et les fonctionnalités principales. (Les 2 autres étudiants n\u0026rsquo;avaient jamais développé de jeu )\nLien Youtube du trailer : (cliquez sur l\u0026rsquo;image) L\u0026rsquo;écran d\u0026rsquo;accueil dans une ambiance Futuriste permet de commencer à jouer ou bien d\u0026rsquo;apprendre les contrôles et les règles du jeu. Chaque joueur clique sur le bouton A de sa manette ou sur la touche Entrée du clavier pour rejoindre la partie. Le but du jeu est de protéger le coeur de la station d\u0026rsquo;extraterrestres qui essayent de le détruire. Les joueurs peuvent se déplacer avec le stick gauche de la manette et tourner leur personnage avec le stick droit. Ils peuvent tirer des lasers, lancer des grenades , afficher une minimap et soigner les alliés à terre. Les aliens arrivent par vagues et la partie se termine si le coeur est détruit ou si toutes les vagues sont éliminées. Divers évènements viennent pimenter la partie : Des chutes de météorites , des coupures de courant et des incendies. Le score est aussi important car c\u0026rsquo;est un jeu d\u0026rsquo;équipe mais il y a aussi de la compétition car les joueurs cherchent à avoir le meilleur score de la partie. ","date":"January 7, 2020","hero":"/posts/station-defenders/Light.png","permalink":"https://hugo-toha.github.io/posts/station-defenders/","summary":"\u003cp\u003eStation Defenders est un jeu de type Twin-Stick shooter - Tower Defense créé sous Unity par 3 étudiants pendant 4 mois.\u003c/p\u003e","tags":["Unity","C#","Split-Screen"],"title":"Station Defenders"},{"categories":["Projets","UQAC"],"contents":"VR Home est logiciel fait grâce à Unity et Steam VR qui permet de tester des agencements de meubles en Réalité Virtuelle. Ce projet a été réalisé par une équipe de 3 étudiants pour le cours d\u0026rsquo;Interaction 3D et réalité virtuelle.\nPour ce cours, nous devions créer un \u0026ldquo;serious game\u0026rdquo; en réalité virtuelle avec Oculus ou HTC Vive en 2 mois . Notre équipe a choisi de réaliser un logiciel de design d\u0026rsquo;intérieur. Nous avons obtenu la note de 18 sur 20. L\u0026rsquo;utilisateur se déplace en se téléportant grâce au système de téléportation de SteamVR, il peut se déplacer librement dans les différentes pièces des maisons et tourne sur lui même pour changer l\u0026rsquo;orientation du personnage. En appuyant sur le bouton A (sur la main droite) ou le bouton X (sur la main gauche) l\u0026rsquo;interface s\u0026rsquo;ouvre et suit les mouvements de la tête de l\u0026rsquo;utilisateur. En pointant son index sur l\u0026rsquo;interface, l\u0026rsquo;utilisateur fait apparaitre une ligne de sélection qui lui permet de cliquer sur les différents boutons en utilisant les triggers des contrôleurs. Grâce à cette interface , l\u0026rsquo;utilisateur peut faire apparaitre des meubles sur les scènes et les placer où il le désire. Il peut changer l\u0026rsquo;agencement de la maison et le nombre de pièces dans l\u0026rsquo;onglet \u0026ldquo;Blueprints\u0026rdquo;. Grâce aux boutons \u0026ldquo;Save\u0026rdquo; et \u0026ldquo;Load\u0026rdquo;, la disposition des meubles est sauvegardée et peut être chargée pour continuer plus tard. Les touches \u0026ldquo;Grab\u0026rdquo; des contrôleurs Oculus permettent d\u0026rsquo;attraper un objet pointé par le joueur, il peut ainsi le déplacer en bougeant ses mains et utiliser les sticks pour faire tourner le meuble selon les 3 axes de rotation, un cercle blanc apparait pour indiquer quel est l\u0026rsquo;axe de rotation actuel ","date":"April 29, 2019","hero":"/posts/vr-home/Rotation-Meuble.png","permalink":"https://hugo-toha.github.io/posts/vr-home/","summary":"\u003cp\u003eVR Home est logiciel fait grâce à Unity et Steam VR qui permet de tester des agencements de meubles en Réalité Virtuelle.\nCe projet a été réalisé par une équipe de 3 étudiants pour le cours d\u0026rsquo;Interaction 3D et réalité virtuelle.\u003c/p\u003e","tags":["Unity","C#","VR"],"title":"VR Home"}]